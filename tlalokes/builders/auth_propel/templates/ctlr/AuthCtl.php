<?
/**
 * Authentication Controller
 * Copyright (C) 2010 Basilio Briceno Hernandez <bbh@tlalokes.org>
 *
 * This file is part of Tlalokes <http://tlalokes.org>.
 *
 * Tlalokes is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation, version 3 of the License.
 *
 * Tlalokes Framework is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Tlalokes Framework.
 * If not, see <http://www.gnu.org/licenses/lgpl.html>.
 */
require_once 'TlalokesCoreController.php';

/**
 * AuthUsers controller generated by Tlalokes's Auth-Propel-Smarty builder
 *
 * @author Basilio Brice&ntilde;o Hern&aacute;ndez <bbh@tlalokes.org>
 * @copyright Copyright &copy; 2010 Basilio Brice&ntilde;o Hern&aacute;ndez
 * @license http://www.gnu.org/licenses/lgpl.html GNU LGPL
 *
 * @ControllerDefinition( default='login' )
 */
class AuthCtl extends TlalokesCoreController {

  /**
   * login action
   *
   * @ActionDefinition( file='auth.tpl', propel )
   */
  public function login ()
  {
    if ( !isset( $_SESSION['profiles'] ) || !isset( $_SESSION['role'] ) ) {

      // verify method
      if ( $_SERVER['REQUEST_METHOD'] == 'POST' ) {

        // validate form
        if ( !isset( $this->request->email ) || !$this->request->email ) {
          $this->response->exception = 'Provide an email';
        } elseif ( !isset( $this->request->password ) ||
                   !$this->request->password ) {
          $this->response->exception = 'Provide a password';
        } else {

          // check if account exists
          $user = AuthUsersBss::getByEmail( $this->request->email );
          if ( is_string( $user ) ) {
            $this->response->exception = $user;
          } else {
            // check password
            if ( $user['password'] ==  tlalokes_core_crypt( $this->request->password ) ) {
              $_SESSION['user_id'] = $user['id'];

              // check role
              $role = AuthRolesBss::getByName( $user['role_name'] );
              if ( $role['role_status'] == 1 ) {

                // set access profile
                $profiles = AuthAccessProfilesRolesBss::getProfilesByRole( $role['id'] );
                if ( is_string( $profiles ) ) {
                  $this->response->exception = $profiles;
                } else {
                  foreach( $profiles as $profile ) {
                    $_SESSION['profiles'][] = $profile['profile'];
                  }
                }
                unset( $profiles );

                // set role
                $_SESSION['role'] = $role['id'];
                unset( $role );
                $this->response->flag = true;
              }
            } else {
              $this->response->exception = 'Password invalid';
            }
          }
        }
      }
    } else {
      $this->response->flag = true;
    }
  }

  /**
   * logout action
   *
   * @ActionDefinition( file='auth.tpl' )
   */
  public function logout ()
  {
    session_destroy();
  }
}
