<?
$str = <<<DOT
<?
require_once 'TlalokesCoreController.php';

/**
 * $name Controller generated by Tlalokes Framework
 *
 * @author Tlalokes Framework
 * @ControllerDefinition( default='read' )
 */
class {$name}Ctl extends TlalokesCoreController {

  /**
   * Reads {$name}
   *
   * @ActionDefinition( file='$namelow.tpl', propel, smarty )
   */
  public function read ()
  {
    if ( isset( \$this->request->_id ) && \$this->request->_id ) {
      \$this->response->_id = \$this->request->_id;
      \$response = {$name}Bss::getByPK( \$this->request->_id );
      if ( is_array( \$response ) ) {
        \$this->response->element = \$response;
      } else {
        \$this->response->exception = \$response;
      }
    } else {
      \$response = {$name}Bss::getAll( \$this->request );
      if ( is_array( \$response['data'] ) ) {
        \$this->response->pager = \$response['pager'];
        \$this->response->list = \$response['data'];

DOT;

// looks for references
$ref = '';
$spc = "        ";
foreach ( $columns as $key => $column ) {
  if ( isset( $column->reference ) && $column->reference ) {
    $mod_key = tlalokes_str_change_format( $column->reference->table );
    $ref .= $spc."// get reference's content for {$column->reference->table}\n".
            $spc."\${$column->reference->table} = {$mod_key}Bss::getAll( \$this->request );\n".
            $spc."\$this->response->{$column->reference->table} = \${$column->reference->table}['data'];\n";
    unset( $mod_key );
  }
}
unset( $spc );

$str .= $ref . <<<DOT
      } else {
        \$this->response->exception = \$response;
      }
    }
  }

  /**
   * Create {$name}
   *
   * @ActionDefinition( file='{$namelow}.tpl', propel, smarty )
   */
  public function create ()
  {
    \$response = {$name}Bss::create( \$this->request );
    if ( is_array( \$response ) ) {
      \$this->response->_id = \$response['id'];
      \$this->response->element = \$response;
    } else {
      \$this->response->exception = \$response;
    }
  }


  /**
   * Update {$name}
   *
   * @ActionDefinition( file='{$namelow}.tpl', propel, smarty )
   */
  public function update ()
  {
    \$response = {$name}Bss::update( \$this->request );
    if ( is_array( \$response ) ) {
      \$this->response->_id = \$response['id'];
      \$this->response->element = \$response;
    } else {
      \$this->response->exception = \$response;
    }
  }


  /**
   * Delete {$name}
   *
   * @ActionDefinition( file='{$namelow}.tpl', propel, smarty )
   */
  public function delete ()
  {
    \$response = {$name}Bss::delete( \$this->request );
    if ( is_array( \$response['data'] ) ) {
      \$this->response->pager = \$response['pager'];
      \$this->response->list = \$response['data'];
    } else {
      \$this->response->exception = \$response;
    }
  }

  /**
   * Add {$name}
   *
   * @ActionDefinition( file='{$namelow}.tpl', propel, smarty )
   */
  public function add ()
  {
DOT;

// looks for references
$ref = '';
foreach ( $columns as $key => $column ) :
  if ( isset( $column->reference ) && $column->reference ) :
    $mod_key = tlalokes_str_change_format( $column->reference->table );
    $ref .= "    // get reference's content for {$column->reference->table}\n".
            "    \${$column->reference->table} = {$mod_key}Bss::getAll( \$this->request );\n".
            "    \$this->response->{$column->reference->table} = \${$column->reference->table}['data'];\n";
    unset( $mod_key );
  endif;
endforeach;

$str .= $ref . <<<DOT
  }


  /**
   * Edit {$name}
   *
   * @ActionDefinition( file='{$namelow}.tpl', propel, smarty )
   */
  public function edit ()
  {
    \$this->response->_id = \$this->request->_id;
    \$response = {$name}Bss::getByPK( \$this->request->_id );
    if ( is_array( \$response ) ) {
      \$this->add();
      \$this->response->element = \$response;

DOT;

// looks for references
$ref = '';
$spc = "      ";
foreach ( $columns as $key => $column ) {
  if ( isset( $column->reference ) && $column->reference ) {
    $mod_key = tlalokes_str_change_format( $column->reference->table );
    $ref .= "$spc// get reference's content for {$column->reference->table}\n".
            "$spc\${$column->reference->table} = {$mod_key}Bss::getAll( \$this->request );\n".
            "$spc\$this->response->{$column->reference->table} = \${$column->reference->table}['data'];\n";
    unset( $mod_key );
  }
}
unset( $spc );

$str .= $ref . <<<DOT
    } else {
      \$this->response->exception = \$response;
    }
  }

  /**
   * Filter {$name}
   *
   * @ActionDefinition( file='{$namelow}.tpl', propel, smarty )
   */
  public function filter ()
  {
    \$response = {$name}Bss::filter( \$this->request );
    if ( is_array( \$response ) ) {
      \$this->response->vars = \$_SERVER['QUERY_STRING'];
      \$this->response->pager = \$response['pager'];
      \$this->response->list = \$response['data'];

DOT;

// looks for references
$ref = '';
$spc = "      ";
foreach ( $columns as $key => $column ) {
  if ( isset( $column->reference ) && $column->reference ) {
    $mod_key = tlalokes_str_change_format( $column->reference->table );
    $ref .= "$spc// get reference's content for {$column->reference->table}\n".
            "$spc\${$column->reference->table} = {$mod_key}Bss::getAll( \$this->request );\n".
            "$spc\$this->response->{$column->reference->table} = \${$column->reference->table}['data'];\n";
    unset( $mod_key );
  }
}
unset( $spc );

$str .= $ref . <<<DOT
    } else {
      \$this->response->exception = \$response;
      \$list = {$name}Bss::getAll( \$this->request );
      \$this->response->list = \$list['pager'];
      \$this->response->data = \$list['data'];
    }
  }
}
DOT;
